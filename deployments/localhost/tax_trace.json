{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payer",
          "type": "address"
        }
      ],
      "name": "Owner_Authentication_failed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "taxPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "taxPayer_created",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "one",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "five",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ten",
          "type": "uint256"
        }
      ],
      "name": "tokenCounted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "income",
          "type": "uint256"
        }
      ],
      "name": "createTaxPayer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ones",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fives",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tens",
          "type": "uint256"
        }
      ],
      "name": "payTax",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "showDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "Name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "Age",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "Income",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            }
          ],
          "internalType": "struct tax_trace.taxPayer",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "showOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "showPaidTaxPayers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "showTaxAmountPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "showTokens",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "One",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "Five",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "Ten",
              "type": "uint256"
            }
          ],
          "internalType": "struct tax_trace.eRupee",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "taxDistribution",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xecff1041f5c06f40df9506a6a519b2ca87dc00f220ad0fe35c3e65a482e55c22",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1834811",
    "logsBloom": "0x
    "blockHash": "0x53e69b880287cb3d85f14362a29f1734428117e47a5f975f2e7dbb294b411a08",
    "transactionHash": "0xecff1041f5c06f40df9506a6a519b2ca87dc00f220ad0fe35c3e65a482e55c22",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1834811",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "621ce19eae77ff8f6b2e455abbfc238a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"}],\"name\":\"Owner_Authentication_failed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"taxPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"taxPayer_created\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"one\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"five\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ten\",\"type\":\"uint256\"}],\"name\":\"tokenCounted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"income\",\"type\":\"uint256\"}],\"name\":\"createTaxPayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ones\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tens\",\"type\":\"uint256\"}],\"name\":\"payTax\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"Age\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Income\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"internalType\":\"struct tax_trace.taxPayer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showPaidTaxPayers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showTaxAmountPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"One\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Five\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Ten\",\"type\":\"uint256\"}],\"internalType\":\"struct tax_trace.eRupee\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxDistribution\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tax_trace.sol\":\"tax_trace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tax_trace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nerror Owner_Authentication_failed(address payer);\\nerror priority_is_Set_Already();\\n\\ncontract tax_trace{\\n\\n    address owner;\\n\\n    struct Departments {\\n        string p_first;\\n        string p_sec;\\n        string p_third;\\n        string p_fourth;\\n    }\\n\\n    struct taxPayer {\\n        string Name;\\n        uint Age;\\n        uint Income;\\n        bool status;\\n    }\\n    \\n    struct eRupee {\\n        uint One;\\n        uint Five;\\n        uint Ten;\\n    }\\n\\n    constructor () {\\n        owner = msg.sender;\\n    }\\n\\n    event taxPayer_created(\\n        address indexed payer,\\n        bool status\\n    );\\n\\n    event taxPaid(\\n        address indexed payer,\\n        bool status\\n    );\\n\\n    event tokenCounted(\\n        address indexed payer,\\n        uint one,\\n        uint five,\\n        uint ten\\n    );\\n\\n    modifier notPaidAlready(address payer) {\\n        if (taxPayersmap[payer].status == true) {\\n            revert(\\\"paid already\\\");\\n        }\\n        else {\\n            _;\\n        }\\n    }\\n\\n    modifier ownerAuth(address payer) {\\n        if (owner != payer) {\\n            revert Owner_Authentication_failed(payer);\\n        } else {\\n            _;\\n        }\\n    }\\n\\n    modifier existAlready(address payer) {\\n        bool flag = false;\\n        for(uint i=0; i<payersArray.length; i++) {\\n            if (payersArray[i] == payer) {\\n                flag = true;\\n            } else {\\n                flag = false;\\n            }\\n        }\\n        if (flag) {\\n            revert(\\\"Payer Already exists\\\");\\n        } else {\\n            _;\\n        }\\n    }\\n\\n    modifier notExistAlready(address payer) {\\n        bool flag = false;\\n        for(uint i=0; i<payersArray.length; i++) {\\n            if (payersArray[i] == payer) {\\n                flag = true;\\n            }\\n        }\\n        if (!flag) {\\n            revert(\\\"Payer Does Not exist\\\");\\n        } else {\\n            _;\\n        }\\n    }\\n\\n    mapping (address => taxPayer) private taxPayersmap;\\n    mapping (address => uint256) private paidTaxPayersmap;\\n    address [] private paidTaxPayers;\\n    address[] private payersArray;\\n    mapping (address => eRupee) private tokenCountMap;\\n    uint [] private randomTokenArray;\\n    // mapping (address => Departments) private departmentCodes;\\n    // bool[4] private prioritiesSet; \\n\\n    function createTaxPayer(\\n        string memory name,\\n        uint age,\\n        uint income      //income in wei\\n    ) external existAlready(msg.sender) notPaidAlready(msg.sender) {\\n        \\n        taxPayer memory payer = taxPayer({\\n            Name: name, \\n            Age: age, \\n            Income: income * 1e18,\\n            status: false\\n        });\\n        \\n        taxPayersmap[msg.sender] = payer;\\n        payersArray.push(msg.sender);\\n        emit taxPayer_created(msg.sender,false);\\n    }\\n\\n    function payTax(uint ones, uint fives, uint tens) external payable \\n        notPaidAlready(msg.sender) \\n        notExistAlready(msg.sender){\\n\\n        taxPayer memory payer = taxPayersmap[msg.sender];\\n        eRupee memory tokenDivision;\\n        uint256 income = payer.Income;\\n        uint256 amount;\\n        \\n        if(0e18 < income && income <= 10e18) {\\n            amount = 1 * 1e18;\\n            require(msg.value == amount, \\\"Payable amount is 1 Eth\\\");\\n            require((ones * 1e18 + fives * 5e18 + tens * 10e18) == amount, \\\"Check the token count\\\");\\n            tokenDivision = eRupee({\\n                One: ones,\\n                Five: fives,\\n                Ten: tens\\n            });\\n            if (tokenDivision.One != 0) {randomTokenArray.push(tokenDivision.One * 1);}\\n            if (tokenDivision.Five != 0) {randomTokenArray.push(tokenDivision.Five * 5);}  \\n            if (tokenDivision.Ten != 0) {randomTokenArray.push(tokenDivision.Ten * 10);}\\n\\n        }\\n        else if(10e18 < income && income <= 25e18) {\\n            amount = 5e18;\\n            require(msg.value == amount, \\\"Payable amount is 5 Eth\\\");\\n            require((ones * 1e18 + fives * 5e18 + tens * 10e18) == amount, \\\"Check the token count\\\");\\n            tokenDivision = eRupee({\\n                One: ones,\\n                Five: fives,\\n                Ten: tens\\n            });\\n            if (tokenDivision.One != 0) {randomTokenArray.push(tokenDivision.One * 1);}\\n            if (tokenDivision.Five != 0) {randomTokenArray.push(tokenDivision.Five * 5);}\\n            if (tokenDivision.Ten != 0) {randomTokenArray.push(tokenDivision.Ten * 10);}\\n            \\n        }\\n        else {\\n            amount = 10e18;\\n            require(msg.value == amount, \\\"Payable amount is 10 Eth\\\");\\n            require((ones * 1e18 + fives * 5e18 + tens * 10e18) == amount, \\\"Check the token count\\\");\\n            tokenDivision = eRupee({\\n                One: ones,\\n                Five: fives,\\n                Ten: tens\\n            });\\n            if (tokenDivision.One != 0) {randomTokenArray.push(tokenDivision.One * 1);}\\n            if (tokenDivision.Five != 0) {randomTokenArray.push(tokenDivision.Five * 5);} \\n            if (tokenDivision.Ten != 0) {randomTokenArray.push(tokenDivision.Ten * 10);}\\n            \\n        }\\n\\n        tokenCountMap[msg.sender] = tokenDivision;\\n        paidTaxPayersmap[msg.sender] += msg.value;\\n        taxPayersmap[msg.sender].status = true;\\n        paidTaxPayers.push(msg.sender);\\n        emit taxPaid(msg.sender, true);\\n        emit tokenCounted(msg.sender, ones, fives, tens);\\n    }\\n\\n    function taxDistribution () ownerAuth(msg.sender) public view returns(uint [] memory ) {\\n        return randomTokenArray;\\n    }\\n\\n    function showOwner() public view returns(address) {\\n        return owner;\\n    }\\n\\n    function showPaidTaxPayers() public view returns(address[] memory ) {\\n        return paidTaxPayers;\\n    }\\n\\n    function showDetails() notExistAlready(msg.sender) public view returns(taxPayer memory) {\\n        return taxPayersmap[msg.sender];\\n    }\\n\\n    function showTokens() public view returns(eRupee memory) {\\n        return tokenCountMap[msg.sender];\\n    }\\n\\n    function showTaxAmountPaid() public view returns(uint256) {\\n        return paidTaxPayersmap[msg.sender];\\n    }\\n\\n    // function showPriorities() public view returns(Departments memory) {\\n    //     return departmentCodes[msg.sender];\\n    // }\\n\\n\\n}\\n\\n\\n\",\"keccak256\":\"0xcbdc0e41898e63de0258ac1df9ecf60e0ef9527d00e3bf6f568c9c2f9a0addc3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611ff0806100606000396000f3fe60806040526004361061007b5760003560e01c8063ad903d5b1161004e578063ad903d5b1461011b578063b1cfb8d814610146578063ded9468814610171578063e54770581461019c5761007b565b8063635dd35e1461008057806394ea82cd146100ab5780639587665f146100d6578063a0a22169146100f2575b600080fd5b34801561008c57600080fd5b506100956101c7565b6040516100a2919061156f565b60405180910390f35b3480156100b757600080fd5b506100c0610255565b6040516100cd91906115ec565b60405180910390f35b6100f060048036038101906100eb9190611647565b6102ca565b005b3480156100fe57600080fd5b50610119600480360381019061011491906117e0565b610d37565b005b34801561012757600080fd5b50610130611040565b60405161013d9190611955565b60405180910390f35b34801561015257600080fd5b5061015b611237565b6040516101689190611a26565b60405180910390f35b34801561017d57600080fd5b50610186611321565b6040516101939190611a57565b60405180910390f35b3480156101a857600080fd5b506101b161134a565b6040516101be9190611a81565b60405180910390f35b6060600380548060200260200160405190810160405280929190818152602001828054801561024b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610201575b5050505050905090565b61025d611391565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050905090565b3360011515600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1615151415610362576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035990611af9565b60405180910390fd5b336000805b6004805490508110156103fe578273ffffffffffffffffffffffffffffffffffffffff166004828154811061039f5761039e611b19565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103eb57600191505b80806103f690611b77565b915050610367565b508061043f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043690611c0c565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052908160008201805461049b90611c5b565b80601f01602080910402602001604051908101604052809291908181526020018280546104c790611c5b565b80156105145780601f106104e957610100808354040283529160200191610514565b820191906000526020600020905b8154815290600101906020018083116104f757829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050610556611391565b60008260400151905060008160001080156105795750678ac7230489e800008211155b1561075057670de0b6b3a764000090508034146105cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c290611cd9565b60405180910390fd5b80678ac7230489e80000896105e09190611cf9565b674563918244f400008b6105f49190611cf9565b670de0b6b3a76400008d6106089190611cf9565b6106129190611d53565b61061c9190611d53565b1461065c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065390611df5565b60405180910390fd5b60405180606001604052808b81526020018a815260200189815250925060008360000151146106bf576006600184600001516106989190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b6000836020015114610705576006600584602001516106de9190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b600083604001511461074b576006600a84604001516107249190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b610b16565b81678ac7230489e80000108015610770575068015af1d78b58c400008211155b1561094757674563918244f4000090508034146107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990611e61565b60405180910390fd5b80678ac7230489e80000896107d79190611cf9565b674563918244f400008b6107eb9190611cf9565b670de0b6b3a76400008d6107ff9190611cf9565b6108099190611d53565b6108139190611d53565b14610853576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084a90611df5565b60405180910390fd5b60405180606001604052808b81526020018a815260200189815250925060008360000151146108b65760066001846000015161088f9190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b60008360200151146108fc576006600584602001516108d59190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b6000836040015114610942576006600a846040015161091b9190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b610b15565b678ac7230489e800009050803414610994576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098b90611ecd565b60405180910390fd5b80678ac7230489e80000896109a99190611cf9565b674563918244f400008b6109bd9190611cf9565b670de0b6b3a76400008d6109d19190611cf9565b6109db9190611d53565b6109e59190611d53565b14610a25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1c90611df5565b60405180910390fd5b60405180606001604052808b81526020018a81526020018981525092506000836000015114610a8857600660018460000151610a619190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b6000836020015114610ace57600660058460200151610aa79190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b6000836040015114610b14576006600a8460400151610aed9190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bc69190611d53565b9250508190555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff0219169083151502179055506003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f10d6d4fdaa0ce6e27ec04524a8ab7585f8e85d67b12b75b28bb5cef8d28bdd2c6001604051610cd19190611efc565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167fe969b1f67c2679a427b5434bcebfb25c1bae939f4a214c0e39584d0db4de32c78b8b8b604051610d2393929190611f17565b60405180910390a250505050505050505050565b336000805b600480549050811015610ddc578273ffffffffffffffffffffffffffffffffffffffff1660048281548110610d7457610d73611b19565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610dc45760019150610dc9565b600091505b8080610dd490611b77565b915050610d3c565b508015610e1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1590611f9a565b60405180910390fd5b3360011515600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1615151415610eb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ead90611af9565b60405180910390fd5b60006040518060800160405280888152602001878152602001670de0b6b3a764000087610ee39190611cf9565b815260200160001515815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610f4d9291906113b2565b50602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fecd6d552b09164c629d41b2499a89ce0784dac7c50078f26ba0734810082b4ee600060405161102f9190611efc565b60405180910390a250505050505050565b611048611438565b336000805b6004805490508110156110e4578273ffffffffffffffffffffffffffffffffffffffff166004828154811061108557611084611b19565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156110d157600191505b80806110dc90611b77565b91505061104d565b5080611125576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111c90611c0c565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052908160008201805461117f90611c5b565b80601f01602080910402602001604051908101604052809291908181526020018280546111ab90611c5b565b80156111f85780601f106111cd576101008083540402835291602001916111f8565b820191906000526020600020905b8154815290600101906020018083116111db57829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509250505090565b6060338073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112ca57806040517f78cc6e990000000000000000000000000000000000000000000000000000000081526004016112c19190611a57565b60405180910390fd5b600680548060200260200160405190810160405280929190818152602001828054801561131657602002820191906000526020600020905b815481526020019060010190808311611302575b505050505091505090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60405180606001604052806000815260200160008152602001600081525090565b8280546113be90611c5b565b90600052602060002090601f0160209004810192826113e05760008555611427565b82601f106113f957805160ff1916838001178555611427565b82800160010185558215611427579182015b8281111561142657825182559160200191906001019061140b565b5b5090506114349190611462565b5090565b60405180608001604052806060815260200160008152602001600081526020016000151581525090565b5b8082111561147b576000816000905550600101611463565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114d6826114ab565b9050919050565b6114e6816114cb565b82525050565b60006114f883836114dd565b60208301905092915050565b6000602082019050919050565b600061151c8261147f565b611526818561148a565b93506115318361149b565b8060005b8381101561156257815161154988826114ec565b975061155483611504565b925050600181019050611535565b5085935050505092915050565b600060208201905081810360008301526115898184611511565b905092915050565b6000819050919050565b6115a481611591565b82525050565b6060820160008201516115c0600085018261159b565b5060208201516115d3602085018261159b565b5060408201516115e6604085018261159b565b50505050565b600060608201905061160160008301846115aa565b92915050565b6000604051905090565b600080fd5b600080fd5b61162481611591565b811461162f57600080fd5b50565b6000813590506116418161161b565b92915050565b6000806000606084860312156116605761165f611611565b5b600061166e86828701611632565b935050602061167f86828701611632565b925050604061169086828701611632565b9150509250925092565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116ed826116a4565b810181811067ffffffffffffffff8211171561170c5761170b6116b5565b5b80604052505050565b600061171f611607565b905061172b82826116e4565b919050565b600067ffffffffffffffff82111561174b5761174a6116b5565b5b611754826116a4565b9050602081019050919050565b82818337600083830152505050565b600061178361177e84611730565b611715565b90508281526020810184848401111561179f5761179e61169f565b5b6117aa848285611761565b509392505050565b600082601f8301126117c7576117c661169a565b5b81356117d7848260208601611770565b91505092915050565b6000806000606084860312156117f9576117f8611611565b5b600084013567ffffffffffffffff81111561181757611816611616565b5b611823868287016117b2565b935050602061183486828701611632565b925050604061184586828701611632565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561188957808201518184015260208101905061186e565b83811115611898576000848401525b50505050565b60006118a98261184f565b6118b3818561185a565b93506118c381856020860161186b565b6118cc816116a4565b840191505092915050565b60008115159050919050565b6118ec816118d7565b82525050565b6000608083016000830151848203600086015261190f828261189e565b9150506020830151611924602086018261159b565b506040830151611937604086018261159b565b50606083015161194a60608601826118e3565b508091505092915050565b6000602082019050818103600083015261196f81846118f2565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006119af838361159b565b60208301905092915050565b6000602082019050919050565b60006119d382611977565b6119dd8185611982565b93506119e883611993565b8060005b83811015611a19578151611a0088826119a3565b9750611a0b836119bb565b9250506001810190506119ec565b5085935050505092915050565b60006020820190508181036000830152611a4081846119c8565b905092915050565b611a51816114cb565b82525050565b6000602082019050611a6c6000830184611a48565b92915050565b611a7b81611591565b82525050565b6000602082019050611a966000830184611a72565b92915050565b600082825260208201905092915050565b7f7061696420616c72656164790000000000000000000000000000000000000000600082015250565b6000611ae3600c83611a9c565b9150611aee82611aad565b602082019050919050565b60006020820190508181036000830152611b1281611ad6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b8282611591565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611bb557611bb4611b48565b5b600182019050919050565b7f506179657220446f6573204e6f74206578697374000000000000000000000000600082015250565b6000611bf6601483611a9c565b9150611c0182611bc0565b602082019050919050565b60006020820190508181036000830152611c2581611be9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c7357607f821691505b60208210811415611c8757611c86611c2c565b5b50919050565b7f50617961626c6520616d6f756e74206973203120457468000000000000000000600082015250565b6000611cc3601783611a9c565b9150611cce82611c8d565b602082019050919050565b60006020820190508181036000830152611cf281611cb6565b9050919050565b6000611d0482611591565b9150611d0f83611591565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d4857611d47611b48565b5b828202905092915050565b6000611d5e82611591565b9150611d6983611591565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d9e57611d9d611b48565b5b828201905092915050565b7f436865636b2074686520746f6b656e20636f756e740000000000000000000000600082015250565b6000611ddf601583611a9c565b9150611dea82611da9565b602082019050919050565b60006020820190508181036000830152611e0e81611dd2565b9050919050565b7f50617961626c6520616d6f756e74206973203520457468000000000000000000600082015250565b6000611e4b601783611a9c565b9150611e5682611e15565b602082019050919050565b60006020820190508181036000830152611e7a81611e3e565b9050919050565b7f50617961626c6520616d6f756e74206973203130204574680000000000000000600082015250565b6000611eb7601883611a9c565b9150611ec282611e81565b602082019050919050565b60006020820190508181036000830152611ee681611eaa565b9050919050565b611ef6816118d7565b82525050565b6000602082019050611f116000830184611eed565b92915050565b6000606082019050611f2c6000830186611a72565b611f396020830185611a72565b611f466040830184611a72565b949350505050565b7f506179657220416c726561647920657869737473000000000000000000000000600082015250565b6000611f84601483611a9c565b9150611f8f82611f4e565b602082019050919050565b60006020820190508181036000830152611fb381611f77565b905091905056fea264697066735822122017c1c1f864e5c88aa7f6924d8a5ffa31910216175124c7baaa52f11d3841d5cb64736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063ad903d5b1161004e578063ad903d5b1461011b578063b1cfb8d814610146578063ded9468814610171578063e54770581461019c5761007b565b8063635dd35e1461008057806394ea82cd146100ab5780639587665f146100d6578063a0a22169146100f2575b600080fd5b34801561008c57600080fd5b506100956101c7565b6040516100a2919061156f565b60405180910390f35b3480156100b757600080fd5b506100c0610255565b6040516100cd91906115ec565b60405180910390f35b6100f060048036038101906100eb9190611647565b6102ca565b005b3480156100fe57600080fd5b50610119600480360381019061011491906117e0565b610d37565b005b34801561012757600080fd5b50610130611040565b60405161013d9190611955565b60405180910390f35b34801561015257600080fd5b5061015b611237565b6040516101689190611a26565b60405180910390f35b34801561017d57600080fd5b50610186611321565b6040516101939190611a57565b60405180910390f35b3480156101a857600080fd5b506101b161134a565b6040516101be9190611a81565b60405180910390f35b6060600380548060200260200160405190810160405280929190818152602001828054801561024b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610201575b5050505050905090565b61025d611391565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820154815260200160018201548152602001600282015481525050905090565b3360011515600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1615151415610362576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035990611af9565b60405180910390fd5b336000805b6004805490508110156103fe578273ffffffffffffffffffffffffffffffffffffffff166004828154811061039f5761039e611b19565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103eb57600191505b80806103f690611b77565b915050610367565b508061043f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043690611c0c565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052908160008201805461049b90611c5b565b80601f01602080910402602001604051908101604052809291908181526020018280546104c790611c5b565b80156105145780601f106104e957610100808354040283529160200191610514565b820191906000526020600020905b8154815290600101906020018083116104f757829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050610556611391565b60008260400151905060008160001080156105795750678ac7230489e800008211155b1561075057670de0b6b3a764000090508034146105cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c290611cd9565b60405180910390fd5b80678ac7230489e80000896105e09190611cf9565b674563918244f400008b6105f49190611cf9565b670de0b6b3a76400008d6106089190611cf9565b6106129190611d53565b61061c9190611d53565b1461065c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065390611df5565b60405180910390fd5b60405180606001604052808b81526020018a815260200189815250925060008360000151146106bf576006600184600001516106989190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b6000836020015114610705576006600584602001516106de9190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b600083604001511461074b576006600a84604001516107249190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b610b16565b81678ac7230489e80000108015610770575068015af1d78b58c400008211155b1561094757674563918244f4000090508034146107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990611e61565b60405180910390fd5b80678ac7230489e80000896107d79190611cf9565b674563918244f400008b6107eb9190611cf9565b670de0b6b3a76400008d6107ff9190611cf9565b6108099190611d53565b6108139190611d53565b14610853576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084a90611df5565b60405180910390fd5b60405180606001604052808b81526020018a815260200189815250925060008360000151146108b65760066001846000015161088f9190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b60008360200151146108fc576006600584602001516108d59190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b6000836040015114610942576006600a846040015161091b9190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b610b15565b678ac7230489e800009050803414610994576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098b90611ecd565b60405180910390fd5b80678ac7230489e80000896109a99190611cf9565b674563918244f400008b6109bd9190611cf9565b670de0b6b3a76400008d6109d19190611cf9565b6109db9190611d53565b6109e59190611d53565b14610a25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1c90611df5565b60405180910390fd5b60405180606001604052808b81526020018a81526020018981525092506000836000015114610a8857600660018460000151610a619190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b6000836020015114610ace57600660058460200151610aa79190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b6000836040015114610b14576006600a8460400151610aed9190611cf9565b90806001815401808255809150506001900390600052602060002001600090919091909150555b5b5b82600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bc69190611d53565b9250508190555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff0219169083151502179055506003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f10d6d4fdaa0ce6e27ec04524a8ab7585f8e85d67b12b75b28bb5cef8d28bdd2c6001604051610cd19190611efc565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167fe969b1f67c2679a427b5434bcebfb25c1bae939f4a214c0e39584d0db4de32c78b8b8b604051610d2393929190611f17565b60405180910390a250505050505050505050565b336000805b600480549050811015610ddc578273ffffffffffffffffffffffffffffffffffffffff1660048281548110610d7457610d73611b19565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610dc45760019150610dc9565b600091505b8080610dd490611b77565b915050610d3c565b508015610e1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1590611f9a565b60405180910390fd5b3360011515600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1615151415610eb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ead90611af9565b60405180910390fd5b60006040518060800160405280888152602001878152602001670de0b6b3a764000087610ee39190611cf9565b815260200160001515815250905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610f4d9291906113b2565b50602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167fecd6d552b09164c629d41b2499a89ce0784dac7c50078f26ba0734810082b4ee600060405161102f9190611efc565b60405180910390a250505050505050565b611048611438565b336000805b6004805490508110156110e4578273ffffffffffffffffffffffffffffffffffffffff166004828154811061108557611084611b19565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156110d157600191505b80806110dc90611b77565b91505061104d565b5080611125576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111c90611c0c565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052908160008201805461117f90611c5b565b80601f01602080910402602001604051908101604052809291908181526020018280546111ab90611c5b565b80156111f85780601f106111cd576101008083540402835291602001916111f8565b820191906000526020600020905b8154815290600101906020018083116111db57829003601f168201915b5050505050815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509250505090565b6060338073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112ca57806040517f78cc6e990000000000000000000000000000000000000000000000000000000081526004016112c19190611a57565b60405180910390fd5b600680548060200260200160405190810160405280929190818152602001828054801561131657602002820191906000526020600020905b815481526020019060010190808311611302575b505050505091505090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60405180606001604052806000815260200160008152602001600081525090565b8280546113be90611c5b565b90600052602060002090601f0160209004810192826113e05760008555611427565b82601f106113f957805160ff1916838001178555611427565b82800160010185558215611427579182015b8281111561142657825182559160200191906001019061140b565b5b5090506114349190611462565b5090565b60405180608001604052806060815260200160008152602001600081526020016000151581525090565b5b8082111561147b576000816000905550600101611463565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114d6826114ab565b9050919050565b6114e6816114cb565b82525050565b60006114f883836114dd565b60208301905092915050565b6000602082019050919050565b600061151c8261147f565b611526818561148a565b93506115318361149b565b8060005b8381101561156257815161154988826114ec565b975061155483611504565b925050600181019050611535565b5085935050505092915050565b600060208201905081810360008301526115898184611511565b905092915050565b6000819050919050565b6115a481611591565b82525050565b6060820160008201516115c0600085018261159b565b5060208201516115d3602085018261159b565b5060408201516115e6604085018261159b565b50505050565b600060608201905061160160008301846115aa565b92915050565b6000604051905090565b600080fd5b600080fd5b61162481611591565b811461162f57600080fd5b50565b6000813590506116418161161b565b92915050565b6000806000606084860312156116605761165f611611565b5b600061166e86828701611632565b935050602061167f86828701611632565b925050604061169086828701611632565b9150509250925092565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116ed826116a4565b810181811067ffffffffffffffff8211171561170c5761170b6116b5565b5b80604052505050565b600061171f611607565b905061172b82826116e4565b919050565b600067ffffffffffffffff82111561174b5761174a6116b5565b5b611754826116a4565b9050602081019050919050565b82818337600083830152505050565b600061178361177e84611730565b611715565b90508281526020810184848401111561179f5761179e61169f565b5b6117aa848285611761565b509392505050565b600082601f8301126117c7576117c661169a565b5b81356117d7848260208601611770565b91505092915050565b6000806000606084860312156117f9576117f8611611565b5b600084013567ffffffffffffffff81111561181757611816611616565b5b611823868287016117b2565b935050602061183486828701611632565b925050604061184586828701611632565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561188957808201518184015260208101905061186e565b83811115611898576000848401525b50505050565b60006118a98261184f565b6118b3818561185a565b93506118c381856020860161186b565b6118cc816116a4565b840191505092915050565b60008115159050919050565b6118ec816118d7565b82525050565b6000608083016000830151848203600086015261190f828261189e565b9150506020830151611924602086018261159b565b506040830151611937604086018261159b565b50606083015161194a60608601826118e3565b508091505092915050565b6000602082019050818103600083015261196f81846118f2565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006119af838361159b565b60208301905092915050565b6000602082019050919050565b60006119d382611977565b6119dd8185611982565b93506119e883611993565b8060005b83811015611a19578151611a0088826119a3565b9750611a0b836119bb565b9250506001810190506119ec565b5085935050505092915050565b60006020820190508181036000830152611a4081846119c8565b905092915050565b611a51816114cb565b82525050565b6000602082019050611a6c6000830184611a48565b92915050565b611a7b81611591565b82525050565b6000602082019050611a966000830184611a72565b92915050565b600082825260208201905092915050565b7f7061696420616c72656164790000000000000000000000000000000000000000600082015250565b6000611ae3600c83611a9c565b9150611aee82611aad565b602082019050919050565b60006020820190508181036000830152611b1281611ad6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b8282611591565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611bb557611bb4611b48565b5b600182019050919050565b7f506179657220446f6573204e6f74206578697374000000000000000000000000600082015250565b6000611bf6601483611a9c565b9150611c0182611bc0565b602082019050919050565b60006020820190508181036000830152611c2581611be9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c7357607f821691505b60208210811415611c8757611c86611c2c565b5b50919050565b7f50617961626c6520616d6f756e74206973203120457468000000000000000000600082015250565b6000611cc3601783611a9c565b9150611cce82611c8d565b602082019050919050565b60006020820190508181036000830152611cf281611cb6565b9050919050565b6000611d0482611591565b9150611d0f83611591565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d4857611d47611b48565b5b828202905092915050565b6000611d5e82611591565b9150611d6983611591565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d9e57611d9d611b48565b5b828201905092915050565b7f436865636b2074686520746f6b656e20636f756e740000000000000000000000600082015250565b6000611ddf601583611a9c565b9150611dea82611da9565b602082019050919050565b60006020820190508181036000830152611e0e81611dd2565b9050919050565b7f50617961626c6520616d6f756e74206973203520457468000000000000000000600082015250565b6000611e4b601783611a9c565b9150611e5682611e15565b602082019050919050565b60006020820190508181036000830152611e7a81611e3e565b9050919050565b7f50617961626c6520616d6f756e74206973203130204574680000000000000000600082015250565b6000611eb7601883611a9c565b9150611ec282611e81565b602082019050919050565b60006020820190508181036000830152611ee681611eaa565b9050919050565b611ef6816118d7565b82525050565b6000602082019050611f116000830184611eed565b92915050565b6000606082019050611f2c6000830186611a72565b611f396020830185611a72565b611f466040830184611a72565b949350505050565b7f506179657220416c726561647920657869737473000000000000000000000000600082015250565b6000611f84601483611a9c565b9150611f8f82611f4e565b602082019050919050565b60006020820190508181036000830152611fb381611f77565b905091905056fea264697066735822122017c1c1f864e5c88aa7f6924d8a5ffa31910216175124c7baaa52f11d3841d5cb64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9,
        "contract": "contracts/tax_trace.sol:tax_trace",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 195,
        "contract": "contracts/tax_trace.sol:tax_trace",
        "label": "taxPayersmap",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(taxPayer)27_storage)"
      },
      {
        "astId": 199,
        "contract": "contracts/tax_trace.sol:tax_trace",
        "label": "paidTaxPayersmap",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 202,
        "contract": "contracts/tax_trace.sol:tax_trace",
        "label": "paidTaxPayers",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 205,
        "contract": "contracts/tax_trace.sol:tax_trace",
        "label": "payersArray",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 210,
        "contract": "contracts/tax_trace.sol:tax_trace",
        "label": "tokenCountMap",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_struct(eRupee)34_storage)"
      },
      {
        "astId": 213,
        "contract": "contracts/tax_trace.sol:tax_trace",
        "label": "randomTokenArray",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_uint256)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(eRupee)34_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct tax_trace.eRupee)",
        "numberOfBytes": "32",
        "value": "t_struct(eRupee)34_storage"
      },
      "t_mapping(t_address,t_struct(taxPayer)27_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct tax_trace.taxPayer)",
        "numberOfBytes": "32",
        "value": "t_struct(taxPayer)27_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(eRupee)34_storage": {
        "encoding": "inplace",
        "label": "struct tax_trace.eRupee",
        "members": [
          {
            "astId": 29,
            "contract": "contracts/tax_trace.sol:tax_trace",
            "label": "One",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 31,
            "contract": "contracts/tax_trace.sol:tax_trace",
            "label": "Five",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 33,
            "contract": "contracts/tax_trace.sol:tax_trace",
            "label": "Ten",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(taxPayer)27_storage": {
        "encoding": "inplace",
        "label": "struct tax_trace.taxPayer",
        "members": [
          {
            "astId": 20,
            "contract": "contracts/tax_trace.sol:tax_trace",
            "label": "Name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 22,
            "contract": "contracts/tax_trace.sol:tax_trace",
            "label": "Age",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 24,
            "contract": "contracts/tax_trace.sol:tax_trace",
            "label": "Income",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 26,
            "contract": "contracts/tax_trace.sol:tax_trace",
            "label": "status",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}